/* eslint-disable arrow-body-style */
function getRandomPositiveInteger(a, b) {
  // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –æ—Ç—Ä–∏—Ü–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º NaN
  if (a < 0 || b < 0) {
    return NaN;
  }
  const lower = Math.ceil(Math.min(a, b));
  const upper = Math.floor(Math.max(a, b));
  const result = Math.random() * (upper - lower + 1) + lower;
  return Math.floor(result);
}

function checkStringLength(string, length) {
  return string.length <= length;
}
const ARRAY_COUNT = {
  min: 1,
  max: 25,
};

const LIKES_COUNT = {
  min: 15,
  max: 200,
};

const COMMENT_COUNT = {
  min: 0,
  max: 200,
};

const ARRAY_LENGTH = 25;

const DESCRIPTON_PHOTO = [
  "–î–∞–∂–µ –±–ª–∏–∑–∫–∏–µ –Ω–µ —á–∏—Ç–∞—é—Ç –º—ã—Å–ª–∏. –í—ã—Ä–∞–∂–∞—Ç—å —á—É–≤—Å—Ç–≤–∞ ‚Äî —Ç–≤–æ—è –æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
  "–¢–æ —á—É–≤—Å—Ç–≤–æ, –∫–æ–≥–¥–∞ —Ç—ã —Ä–æ–¥–∏–ª—Å—è –∫—Ä–∞—Å–∞–≤—á–∏–∫–æ–º üòé",
  "–Ø —Å–æ —Å–≤–æ–∏–º –ª—É—á—à–∏–º –¥—Ä—É–≥–æ–º.",
  "–£ –º–µ–Ω—è –µ—Å—Ç—å —Ü–µ–ª–∏. –ò —è –∏–¥—É –∫ –Ω–∏–º, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –≤—Å–µ –ø—Ä–µ–≥—Ä–∞–¥—ã",
  "–ö–∞–∂–¥—ã–π –º—É–∂—á–∏–Ω–∞ –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å —Å–¥–µ–ª–∞—Ç—å –∏–∑ —Å–≤–æ–µ–π –∂–µ–Ω—â–∏–Ω—ã –∫–æ—Ä–æ–ª–µ–≤—É, —Ç–æ–≥–¥–∞ –æ–Ω —Å–∞–º —Å—Ç–∞–Ω–µ—Ç –¥–ª—è –Ω–µ—ë –∫–æ—Ä–æ–ª—ë–º¬ª üëëüë∏ü§¥",
  "–ü—è—Ç–Ω–∏—Ü–∞ —Ä–∞–∑–≤—Ä–∞—Ç–Ω–∏—Ü–∞",
  "–ú–æ–∑–≥–∏ ‚Äî –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∞—è –≤–µ—â—å, –∂–∞–ª—å –Ω–µ –≤—Å–µ –∏–º–∏ —É–º–µ—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è‚Ä¶¬ª üòú",
  "¬´–ü–æ—à—ë–ª, —É–≤–∏–¥–µ–ª, –∑–∞–±—ã–ª, —á—Ç–æ —Ö–æ—Ç–µ–ª.¬ª üòÖ",
  "–í —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö –º–æ–∂–Ω–æ —É—Ç–æ–Ω—É—Ç—å.¬ª üëÄüôÜ‚Äç‚ôÄÔ∏è",
  "–•–æ—Ä–æ—à–æ —Ç–∞–º, –≥–¥–µ –º–µ–Ω—è –Ω–µ—Ç‚Ä¶ –ù–æ –Ω–∏—á–µ–≥–æ, —è –∏ —Ç—É–¥–∞ –¥–æ–±–µ—Ä—É—Å—å!",
  "–°—Ç—Ä–∞—à–Ω–µ–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –µ—ë –∫—Å–µ—Ä–æ–∫–æ–ø–∏—è.",
  "–ë–µ–≥–∞—é –ª–∏ —è –ø–æ —É—Ç—Ä–∞–º? –ö–æ–Ω–µ—á–Ω–æ. –ï—â–µ –∏ —Å –∫—Ä–∏–∫–∞–º–∏: ¬´–ë–ª–∏–Ω!! –ü—Ä–æ—Å–ø–∞–ª!!!¬ª",
  "–•–æ—Ä–æ—à–∏–π –¥—Ä—É–≥ –¥–µ—à–µ–≤–ª–µ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏.",
  "–£ –∫–∞–∂–¥–æ–≥–æ –µ—Å—Ç—å —à–∞–Ω—Å –Ω–∞ –æ—à–∏–±–∫—É, –Ω–æ —É –º–µ–Ω—è –±–µ–∑–ª–∏–º–∏—Ç.",
  "–ñe–Ωc–∫a—è –ªo–≥–∏–∫a ‚Äì —ç—Ço —Ç–≤ep–¥a—è y–≤epe–Ω–Ωoc—Ç—å –≤ —Ço–º, —á—Ço –ª—é–±y—é o–±—äe–∫—Ç–∏–≤–Ωy—é pea–ª—å–Ωoc—Ç—å –ºo–∂–Ωo –øpeo–¥o–ªe—Ç—å –∂e–ªa–Ω–∏e–º.",
  "–ï—Å–ª–∏ –±—ã —É –º–µ–Ω—è –±—ã–ª–æ —á—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞, —è –±—ã –ø—Ä–∏–¥—É–º–∞–ª –ø–æ–¥–ø–∏—Å—å –ø–æ—Å–º–µ—à–Ω–µ–µ.",
  "–ü–æ—Ö–æ–∂–µ —É –º–µ–Ω—è –∞–ª–ª–µ—Ä–≥–∏—è –Ω–∞ —É—Ç—Ä–æ",
  "–û—Ç –¥—É—à–∏ –ø–æ—Å–º–µ—è—Ç—å—Å—è –∏ –≤–≤–æ–ª—é –≤—ã—Å–ø–∞—Ç—å—Å—è ‚Äì –¥–≤–∞ –ª—É—á—à–∏—Ö –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –æ—Ç –≤—Å–µ–≥–æ –Ω–∞ —Å–≤–µ—Ç–µ",
  "–î–µ–Ω—å–≥–∏ —Ç–æ–∂–µ —Å—Ç—Ä–∞–¥–∞—é—Ç, –æ—Ç—Ç–æ–≥–æ, —á—Ç–æ —É –Ω–∏—Ö –Ω–µ—Ç –º–µ–Ω—è.",
  "–ü–æ–º–Ω–∏—Ç–µ: –≤—ã –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –Ω–∞–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –º–∏—Ä —Å–æ–ª–Ω–µ—á–Ω—ã–º —Å–≤–µ—Ç–æ–º.",
  "–í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π—Ç–µ —Å–≤–æ–π –¥–µ–Ω—å —Å —Ö–æ—Ä–æ—à–∏—Ö –ª—é–¥–µ–π –∏ –∫–æ—Ñ–µ.",
  "–ë—É–¥—å—Ç–µ —Å—á–∞—Å—Ç–ª–∏–≤—ã –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç ‚Äî –∏ –µ—Å—Ç—å –≤–∞—à–∞ –∂–∏–∑–Ω—å",
  "–Ø –ø—ã—Ç–∞–ª–∞—Å—è –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –π–æ–≥–æ–π, –Ω–æ –≤ –ø–æ–∑–µ –ª–æ—Ç–æ—Å–∞ —É—Å–Ω—É–ª.",
  "–í—Å–µ–≥–¥–∞ –ø–æ–º–Ω–∏—Ç–µ: –≤—ã –∂–∏–≤–µ—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.",
  "–£–ª—ã–±–∫–∞ ‚Äî –∫—Ä–∞—Å–∏–≤–∞—è –∫—Ä–∏–≤–∞—è, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç –º–∏—Ä –ø—Ä–æ—á–Ω–µ–µ.",
];

// —Å–æ–∑–¥–∞–¥–∏–º –º–∞—Å–∏—Å–∏–≤ –∏–∑ –ø–æ—Å–ª–µ–¥–∞–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 25
const arrIndex = [];
for (let i = ARRAY_COUNT.min - 1; i < ARRAY_COUNT.max; i++) {
  arrIndex[i] = arrIndex.push(i + 1);
}

// —É–±–µ—Ä–µ–º —Å–∫–æ–±–∫–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ–º spread -—Å–∏–Ω—Ç–∞–∫—Å–∏—Å
// arr = Math.floor(...arrIndex);

// —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –≤ –Ω–µ–µ –º–∞—Å—Å–∏–≤–∞

const getRandomElementArray = (elements) =>
  elements[getRandomPositiveInteger(0, elements.length - 1)];

// —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
const createPhoto = (index) => {
  return {
    id: index,
    url: `photos/${index}.jpg`,
    description: getRandomElementArray(DESCRIPTON_PHOTO),
    likes: getRandomPositiveInteger(LIKES_COUNT.min, LIKES_COUNT.max),
    coments: getRandomPositiveInteger(COMMENT_COUNT.min, COMMENT_COUNT.max),
  };
};

const PhotosArr = Array.from({ length: ARRAY_LENGTH }, (curretValue, index) =>
  createPhoto(index + 1)
);
console.log(PhotosArr);
